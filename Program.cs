// Написать программу, которая из имеющегося массива строк формирует массив из строк, 
// длина которых меньше либо равна 3 символа. Первоначальный массив можно ввести с клавиатуры, 
// либо задать на старте выполнения алгоритма. При решении не рекомендуется пользоваться коллекциями, 
// лучше обойтись исключительно массивами.
// Примеры:
// ["hello", "2"    , "world", ":-)"] -> ["2", ":-)"]

// ["1234", "1567", "-2", "computer science"] -> ["-2"]

// ["Russia", "Denmark", "Kazan"] -> []

string[] array1 = new string[5] {"123", "23", "hello", "world", "res"};
string[] array2 = new string[array1.Length];
void SecondArrayWithIF(string[] array1, string[] array2)
{
    int count = 0;
    for (int i = 0; i < array1.Length; i++)
    {
    if(array1[i].Length <= 3)
        {
        array2[count] = array1[i];
        count++;
        }
    }
}
void PrintArray(string[] array)
{
    for (int i = 0; i < array.Length; i++)
    {
        Console.Write($"{array[i]} ");
    }
    Console.WriteLine();
}
SecondArrayWithIF(array1, array2);
PrintArray(array2);


//++++++++++++++++++++++++++++++++++-------------------------------------------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// // Написать программу, которая из имеющегося массива строк формирует массив из строк, 
// // длина которых меньше либо равна 3 символа. Первоначальный массив можно ввести с клавиатуры, 
// // либо задать на старте выполнения алгоритма. При решении не рекомендуется пользоваться коллекциями, 
// // лучше обойтись исключительно массивами.
// // Примеры:
// // ["привет", "2", "мир", ":-)"] -> ["2", ":-)"]
// // ["1234", "1567", "-2", " информатика"] -> ["-2"]
// // ["Россия", "Дания", "Казань"] -> []

// string[] array = { "привет", "2", "мир", ":-)", "1234", "1567", " Русь",
// "-2", "информатика", "Россия", "Дания", "Казань", "ГБ", "GBU" };
// int count = проверка массива(массива);
// строка[] Результирующий массив = FillResultArray(массив, количество);
// int ArrayCheck(строка[] массив)
// {
//  количество входов = 0;
//  for (int i = 0; i < массив.Длина; i++)
//     {
//  если (массив[i].Длина <= 3) количество++;
//     }
//  возвращаемое количество;
// }
// string[] FillResultArray(строка[] массив, количество значений)
// {
//  строка[] результат = новая строка[количество];
//  for (int i = 0; i < массив.Длина; i++)
//     {
//  если (массив[i].Длина <= 3)
//         {
//  результат[результат.Длина - количество] = массив[i];
//  количество--;
//         }
//     }
//  возвращает результат;
// }
// аннулировать printArray(string[] массив)
// {
//  Консоль.Написать("[");
//  for (int i = 0; i < массив.Длина - 1; i++) Консоль.Написать($"{array[i]}, ");
//  Консоль.Написать($"{array[массив.Длина - 1]}]");
// }
// Набор для печати (resultArray);


//++++++++++++++++++++++++++++++++++-------------------------------------------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// string[] M;
// Console.WriteLine("Введите массив строк через пробел");
// string stroka = Console.ReadLine();
// M = stroka.Split(' ');
// var result = new string[M.Length];
// var realSize = 0;
// foreach (var value in M)
// {
//     if (value.Length <= 3)
//     {
//         result[realSize] = value;
//         realSize++;
//     }
// }
// Console.WriteLine(string.Join(Environment.NewLine, result, 0, realSize));
// Console.ReadKey(true);